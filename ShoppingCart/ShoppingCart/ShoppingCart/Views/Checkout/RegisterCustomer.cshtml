@model ShoppingCart.Models.CustomerMetaClass

@{
   ViewBag.Title = "Register";
}

<h2>Shipment</h2>


@using (Html.BeginForm("RegisterCustomer", "Checkout", FormMethod.Post))
{
   @Html.AntiForgeryToken()

   <div class="form-horizontal">
      <h4>Register your shipping details</h4>
      <hr />
      @Html.ValidationSummary(true, "", new { @class = "text-danger" })

      <div class="form-group">
         @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
         <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @name = "firstname" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
         </div>
      </div>

      <div class="form-group">
         @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
         <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @name = "lastname" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
         </div>
      </div>

      <div class="form-group">
         @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
         <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @name = "email" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
         </div>
      </div>

      <div class="form-group">
         @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
         <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @name = "address" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
         </div>
      </div>

      <div class="form-group">
         @Html.LabelFor(model => model.Suburb, htmlAttributes: new { @class = "control-label col-md-2" })
         <div class="col-md-10">
            @Html.EditorFor(model => model.Suburb, new { htmlAttributes = new { @class = "form-control", @name = "suburb" } })
            @Html.ValidationMessageFor(model => model.Suburb, "", new { @class = "text-danger" })
         </div>
      </div>

      <div class="form-group">
         @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
         <div class="col-md-10">
            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @name = "state" } })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
         </div>
      </div>

      <div class="form-group">
         @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "control-label col-md-2" })
         <div class="col-md-10">
            @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control", @name = "postcode" } })
            @Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-danger" })
         </div>
      </div>

      <div class="form-group">
         <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-default" />
         </div>
      </div>
   </div>
}

@section Scripts {
   @Scripts.Render("~/bundles/jqueryval")
}
